{
    "name": "AppThemes",
    "framework": "ext",
    
    "version": "0.0.0.0",

    "indexHtmlPath": "index.html",

    "classpath": [
        "app",
        "${toolkit.name}/src"
    ],

    "overrides": [
        "overrides",
        "${toolkit.name}/overrides"
    ],
    
    "requires": [
        "font-awesome"
    ],

    "fashion": {
        "inliner": {
            "enable": false
        }
    },

    "sass": {
        "namespace": "AppThemes",
        "etc": [
            "sass/etc/all.scss",
            "${toolkit.name}/sass/etc/all.scss"
        ],
        "var": [
            "sass/var/all.scss",
            "sass/var",
            "${toolkit.name}/sass/var"
        ],
        "src": [
            "sass/src",
            "${toolkit.name}/sass/src"
        ]
    },

    "js": [
        {
            "path": "app.js",
            "bundle": true
        }
    ],

    "classic": {
        "js": [{
            "path": "${framework.dir}/build/ext-all-rtl-debug.js"
        }]
    },

    "modern": {
        "js": [{
            "path": "${framework.dir}/build/ext-modern-all-debug.js"
        }]
    },

    "css": [
        {
            "path": "${build.out.css.path}",
            "bundle": true,
            "exclude": ["fashion"]
        }
    ],


    "bootstrap": {
        //"base": "${app.dir}",
        
        "manifest": "${build.id}.json"
        
        //"microloader": "bootstrap.js",
        //"css": "bootstrap.css"
    },

    "output": {
        "base": "${workspace.build.dir}/${build.environment}/${app.name}",
        "page": "index.html",
        "manifest": "${build.id}.json",
        "js": "${build.id}/app.js",
        "appCache": {
            "enable": false
        },
        //"resources": {
        //    "path": "${build.id}/resources",
        //    "shared": "resources"
        //}
        //"framework": "${build.id}/framework.js",
        "resources": {
            "path": "./${build.id}/resources",
            "images": "./${build.id}/resources/images",
            "shared": "./resources"
            //"toolkit": "${toolkit.name}/resources",
            //"base": "."
        }
    },
    

    /**
     * Extra resources to be copied into the resource folder as specified in the "resources"
     * property of the "output" object. Folders specified in this list will be deeply copied.
     */
    "resources": [
        {
            "path": "resources",
            "output": "shared"
        },
        {
            "path": "${theme.name}/resources/images",
			"output": "images"
        },
        {
            "path": "${toolkit.name}/${theme.name}/resources/images",
			"output": "images"
        },
        {
            "path": "${toolkit.name}/resources"
        },
        {
            "path": "${build.id}/resources"
        }
    ],

    



    /**
     * Build Profiles. This object's properties are each a "build profile". You can
     * add as many as you need to produce optimized builds for devices, themes, locales
     * or other criteria. Your "Ext.beforeLoad" hook (see index.html) is responsible for
     * selecting the desired build profile by setting "Ext.manifest" to one of these
     * names.
     *
     *     "builds": {
     *         "classic": {
     *             "toolkit": "classic",
     *             "theme": "theme-neptune"
     *         },
     *
     *         "modern": {
     *             "toolkit": "modern",
     *             "theme": "theme-neptune"
     *         }
     *     }
     *
     */
    
    "builds": {
        "classic": {
            "toolkit": "classic",
            "theme": "theme-classic"
        },
/*
        "gray": {
            "toolkit": "classic",
            "theme": "theme-gray"
        },
        "crisp": {
            "toolkit": "classic",
            "theme": "theme-crisp"
        },
        "crisp-touch": {
            "toolkit": "classic",
            "theme": "theme-crisp-touch"
        },*/
        "neptune": {
            "toolkit": "classic",
            "theme": "theme-neptune"
        },
        "neptune-touch": {
            "toolkit": "classic",
            "theme": "theme-neptune-touch"
        },
        "triton": {
            "toolkit": "classic",
            "theme": "theme-triton"
        },
/*
        "modern-triton": {
            "toolkit": "modern",
            "theme": "theme-triton"
        },
*/
        "modern": {
            "toolkit": "modern",
            "theme": "theme-triton"
        },
        "material": {
            "toolkit": "modern",
            "material" : {
                "toolbar": {
                    "color": "#1976d2",
                    "dynamic": true
                }
            },
            "theme": "theme-material"
        }
/*        "ios": {
            "toolkit": "modern",
            "theme": "theme-ios"
        }
        "classic": {
            "toolkit": "classic",
            
            "theme": "theme-triton",
            
            "sass": {
                "generated": {
                    "var": "classic/sass/save.scss",
                    "src": "classic/sass/save"
                }
            }
        },

        "modern": {
            "toolkit": "modern",
            
            "theme": "theme-triton",
            
            "sass": {
                "generated": {
                    "var": "modern/sass/save.scss",
                    "src": "modern/sass/save"
                }
            }
        }
*/
    },

    "loader": {
        "cache": false,
        "cacheParam": "_dc"
    },

    "production": {
        "output": {
            "appCache": {
                "enable": true,
                "path": "cache.appcache"
            }
        },
        "loader": {
            "cache": "${build.timestamp}"
        },
        "cache": {
            "enable": true
        },
        "compressor": {
            "type": "yui"
        }
    },
    
    "testing": {
    },
    
    "development": {
        "watch": {
            "delay": 250
        }
    },
	
    "archivePath": "archive/${build.id}",
     
    "cache": {
        "enable": false,
        "deltas": "${build.id}/deltas"
    },
    
    "appCache": {
        "cache": [
            "index.html"
        ],
        "network": [
            "*"
        ],
        "fallback": []
    },
   
    "ignore": [
        "(^|/)CVS(/?$|/.*?$)"
    ],
    "id": "edfce2ba-e50c-44fb-9696-a3648a9cd381"
}
